{"version":3,"sources":["utils.js","Follower.js","App.js","useFetch.js","index.js"],"names":["paginate","followers","pages","Math","ceil","length","Array","from","_","index","start","slice","Follower","avatar_url","html_url","login","className","src","alt","href","App","useState","loading","setLoading","data","setData","getProducts","a","fetch","response","json","useEffect","useFetch","page","setPage","setFollowers","map","follower","key","id","onClick","oldPage","newPage","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MAaeA,EAbE,SAACC,GAEd,IACMC,EAAQC,KAAKC,KAAKH,EAAUI,OADb,GAQrB,OALqBC,MAAMC,KAAK,CAACF,OAAQH,IAAO,SAAEM,EAAEC,GAChD,IAAMC,EAJW,EAIHD,EACd,OAAOR,EAAUU,MAAMD,EAAOA,EALb,OCSVE,EATE,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,WAAYC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,MAEvC,OAAO,6BAASC,UAAW,QACzB,yBAAKC,IAAKJ,EAAYK,IAAKH,IAC3B,4BAAKA,GACL,uBAAGI,KAAML,EAAUE,UAAW,OAA9B,kBCoDWI,MAxDf,WAAgB,IAAD,ECCS,WAAO,IAAD,EACEC,oBAAS,GADX,mBACrBC,EADqB,KACZC,EADY,OAEJF,mBAAS,IAFL,mBAErBG,EAFqB,KAEfC,EAFe,KAItBC,EAAW,uCAAG,8BAAAC,EAAA,sEACKC,MAPf,mEAMU,cACZC,EADY,gBAECA,EAASC,OAFV,OAEZN,EAFY,OAIlBC,EAAQzB,EAASwB,IACjBD,GAAW,GALO,2CAAH,qDAWjB,OAHAQ,qBAAU,WACRL,MACC,IACI,CAAEJ,UAASE,QDfMQ,GAAjBV,EADM,EACNA,QAASE,EADH,EACGA,KADH,EAEWH,mBAAS,GAFpB,mBAENY,EAFM,KAEAC,EAFA,OAGqBb,mBAAS,IAH9B,mBAGNpB,EAHM,KAGKkC,EAHL,KA+Bb,OAzBAJ,qBAAU,WACLT,GACHa,EAAaX,EAAKS,MACjB,CAACX,EAAQW,IAsBL,8BACL,yBAAKjB,UAAU,iBACb,4BAAKM,EAAS,eAAgB,cAC9B,yBAAKN,UAAU,eAEjB,6BAASA,UAAU,aACjB,yBAAKA,UAAU,aACZf,EAAUmC,KAAI,SAACC,GACd,OAAO,kBAAC,EAAD,eAAUC,IAAKD,EAASE,IAAQF,SAGzCf,GAAW,yBAAKN,UAAU,iBAC1B,4BAAQA,UAAW,WAAYwB,QAtBrB,WACbN,GAAQ,SAACO,GACR,IAAIC,EAAUD,EAAU,EAIxB,OAHIC,EAAU,IACZA,EAAU,GAELA,OAgBL,QACClB,EAAKY,KAAI,SAACO,EAAMlC,GACf,OAAO,4BAAQ6B,IAAK7B,EAAOO,UAAS,UAAKP,IAAUwB,EAAK,sBAAuB,YAChEO,QAAS,kBAAMN,EAAQzB,KACnCA,EAAQ,MAGb,4BAAQO,UAAW,WAAYwB,QAvCrB,WACdN,GAAQ,SAACO,GACP,IAAIC,EAAUD,EAAU,EAIxB,OAHIC,EAAUlB,EAAKnB,OAAS,IAC1BqC,EAAUlB,EAAKnB,OAAS,GAEnBqC,OAiCL,YEhDRE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.61b73c9a.chunk.js","sourcesContent":["const paginate = (followers) => {\n    // console.log(followers)\n    const itemsPerPage = 8;\n    const pages = Math.ceil(followers.length / itemsPerPage)\n   // console.log(pages)\n    const newFollowers = Array.from({length: pages},( _,index) => {\n        const start = index * itemsPerPage;\n        return followers.slice(start, start + itemsPerPage)\n    })\n    // console.log(newFollowers)\n    return newFollowers\n}\n\nexport default paginate\n","import React from 'react'\n\nconst Follower = ({avatar_url, html_url, login}) => {\n\n  return <article className={'card'}>\n    <img src={avatar_url} alt={login}/>\n    <h4>{login}</h4>\n    <a href={html_url} className={'btn'}>view profile</a>\n  </article>\n}\n\nexport default Follower\n","import React, { useState, useEffect } from 'react'\nimport { useFetch } from './useFetch'\nimport Follower from './Follower'\nfunction App() {\n  const {loading, data} = useFetch()\n  const [page, setPage] = useState(0);\n  const [followers, setFollowers] = useState([]);\n  // console.log(data, loading)\n\n  useEffect(() => {\n    if(loading) return;\n    setFollowers(data[page])\n  }, [loading,page]);\n\n  const nextPage =() => {\n    setPage((oldPage) => {\n      let newPage = oldPage + 1;\n      if (newPage > data.length - 1) {\n        newPage = data.length - 1;\n      }\n      return newPage\n    })\n  }\n\n  const prevPage =() => {\n     setPage((oldPage) => {\n      let newPage = oldPage - 1;\n      if (newPage < 0) {\n        newPage = 0;\n      }\n      return newPage\n    })\n  }\n\n  return <main>\n    <div className=\"section-title\">\n      <h1>{loading? 'Loadinng ...': 'Pagination'}</h1>\n      <div className=\"underline\"></div>\n    </div>\n    <section className=\"followers\">\n      <div className=\"container\">\n        {followers.map((follower) => {\n          return <Follower key={follower.id} {...follower}/>\n        })}\n      </div>\n      {!loading && <div className=\"btn-container\">\n        <button className={'prev-btn'} onClick={prevPage}>Prev</button>\n        {data.map((item, index) => {\n          return <button key={index} className={`${index === page?'page-btn active-btn': 'page-btn'}`}\n                         onClick={() => setPage(index)}>\n            {index + 1}\n          </button>\n        })}\n        <button className={'next-btn'} onClick={nextPage}>Next</button>\n      </div>}\n    </section>\n  </main>\n}\n\nexport default App\n","import { useState, useEffect } from 'react'\nimport paginate from './utils'\nconst url = 'https://api.github.com/users/john-smilga/followers?per_page=100'\n\nexport const useFetch = () => {\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState([])\n\n  const getProducts = async () => {\n    const response = await fetch(url)\n    const data = await response.json()\n\n    setData(paginate(data))\n    setLoading(false)\n  }\n\n  useEffect(() => {\n    getProducts()\n  }, [])\n  return { loading, data }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}